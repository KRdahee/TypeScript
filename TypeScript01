클린 코드
클린 코드란 말 그대로 깨끗하게 작성된 코드를 의미합니다. 깨끗하게 작성된 코드란 직접적이고 단순하여 읽기가 쉽고, 코드 작성자가 아닌 누가 보더라도 의도가 명확히 드러나는 코드입니다. 이러한 코드는 가독성이 좋고, 의존성을 최대한 줄여 유지보수가 쉬운 특징이 있습니다.

클린 코드를 써야 하는 이유
프로그래머는 작성 기한을 맞추기 위해서 나쁜 코드를 양산할 수밖에 없다고 생각합니다. 하지만 나쁜 코드를 양산하면 결국 기한을 맞추지 못합니다. 오히려 엉망진창인 코드 때문에 개발 속도가 느려지고 결국 기한을 놓칩니다. 기한을 맞추는 유일한 방법은 언제나 코드를 최대한 깨끗하게 유지하는 것입니다.

타입이 필요한 이유
코드를 통해 타입이 필요한 이유를 살펴보겠습니다.

let text = 'elice';
console.log(text.charAt(0)); // "e" 출력
문자열에 charAt()을 이용하면 입력된 인덱스에 해당하는 문자를 반환합니다. 위의 경우 인덱스 첫 번째 문자인 e가 출력되는 것을 확인하실 수 있습니다. 자바스크립트는 동적 타이핑을 지원하기 때문에 text 변수가 선언되는 과정에서 타입이 문자형으로 지정됩니다.

이후 코드를 작성하는 과정에서 text 변수에 다른 값을 할당했다고 가정해 봅시다.

// ...
text = 12345;
console.log(text.charAt(0));
그리고 charAt()을 이용해 첫 번째 문자를 출력하려고 한다면 어떻게 될까요? 직접 실행해 봅시다.

TypeError: text.charAt is not a function 에러가 발생하는 것을 확인하셨나요? 이처럼 자바스크립트는 타입이 없기 때문에 실행 후에 타입 에러를 확인할 수 있습니다. 반면 타입스크립트는 같은 코드에 대해 아래와 같이 실행을 하기 전에, 미리 에러를 확인할 수 있습니다.


정리하자면 자바스크립트의 런타임 단계에서 발생하는 타입 에러는 타입스크립트를 이용한다면 컴파일 단계에서 미리 확인하고 고칠 수 있는 것입니다. 런타임 단계에서 발생하는 에러로 인해 프로그램이 멈춘다면, 운영되는 서비스에 큰 차질이 생길 수 있습니다. 따라서 타입스크립트를 이용한다면 타입 에러와 같은 개발자의 실수를 미리 방지할 수 있습니다.

클린코드와 타입스크립트
위에서 소개한 타입이 필요한 이유처럼 타입을 정의함으로써 개발자의 실수를 줄일 수 있고, 명시된 타입을 보고 해당 변수의 자료형이 무엇인지 쉽게 이해할 수 있습니다.
결과적으로 어떤 용도로 코드가 작성되어있고 무엇을 의미하는지 파악하기 훨씬 용이하기 때문에 유지보수에 유리하고 자연스럽게 개발 속도도 빨라지게 됩니다.

let text: String = 'hello';
그럼 이제부터 타입스크립트에 대해 학습해봅시다.
